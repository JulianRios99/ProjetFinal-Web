// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetFinal.Donnees;

#nullable disable

namespace ProjetFinal.Migrations
{
    [DbContext(typeof(Bibliotheque))]
    [Migration("20230418041829_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetFinal.Models.Ouvrages", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Auteur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Exemplaires")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Ouvrages");
                });

            modelBuilder.Entity("ProjetFinal.Models.Reservations", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("OuvrageID")
                        .HasColumnType("int");

                    b.Property<int>("UtilisateursID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OuvrageID");

                    b.HasIndex("UtilisateursID");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("ProjetFinal.Models.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("ProjetFinal.Models.Utilisateurs", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Admin")
                        .HasColumnType("bit");

                    b.Property<string>("Courriel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Langue")
                        .HasColumnType("int");

                    b.Property<byte[]>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("RoleUtilisateurs", b =>
                {
                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("UtilisateursID")
                        .HasColumnType("int");

                    b.HasKey("RoleID", "UtilisateursID");

                    b.HasIndex("UtilisateursID");

                    b.ToTable("RoleUtilisateurs");
                });

            modelBuilder.Entity("ProjetFinal.Models.Reservations", b =>
                {
                    b.HasOne("ProjetFinal.Models.Ouvrages", "Ouvrage")
                        .WithMany("Reservations")
                        .HasForeignKey("OuvrageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetFinal.Models.Utilisateurs", "Utilisateurs")
                        .WithMany("Reservations")
                        .HasForeignKey("UtilisateursID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ouvrage");

                    b.Navigation("Utilisateurs");
                });

            modelBuilder.Entity("RoleUtilisateurs", b =>
                {
                    b.HasOne("ProjetFinal.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetFinal.Models.Utilisateurs", null)
                        .WithMany()
                        .HasForeignKey("UtilisateursID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetFinal.Models.Ouvrages", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("ProjetFinal.Models.Utilisateurs", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
