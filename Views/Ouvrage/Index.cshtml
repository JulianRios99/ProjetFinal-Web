@model List<Ouvrages>

@inject IViewLocalizer Localizer

@{
    var roles = Context.User.FindAll(ClaimTypes.Role);
    var connexion = Context.User.Identity!.IsAuthenticated;
    var name = Context.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
}

<form method="post" asp-action="Recherche" asp-controller="Ouvrage">
     <label>Autuer:</label>
     <input type="text" name="auteur"/>
    <label>Titre:</label>
    <input type="text" name="titre" />
    <button type="submit">Recherche</button>
 </form>
 


 <table class="table">

     <thead>
         <tr>
             <th>@Html.DisplayNameFor(v => v[0].Titre)</th>
             <th>@Html.DisplayNameFor(v => v[0].Auteur)</th>
             <th>@Html.DisplayNameFor(v => v[0].Exemplaires)</th>
             <th></th>

        </tr>
     </thead>

     @foreach (var ouvrage in Model)
    {
      <tr>
        <td>@Html.DisplayFor(v => ouvrage.Titre)</td>
        <td>@Html.DisplayFor(v => ouvrage.Auteur)</td>
        <td>@Html.DisplayFor(v => ouvrage.Exemplaires)</td>
            <td>
                @if(connexion){
                    <a asp-controller="Reservation" asp-action="Reserver" asp-route-id="@ouvrage.ID" asp-route-userId="@name">@Localizer["Reserver"]</a>

                    @if (Context.User.IsInRole("Admin"))
                    {
                      
                        <a asp-controller="Ouvrage" asp-action="Modification" asp-route-id="@ouvrage.ID">@Localizer["Modifier"]</a>
                         <a asp-controller="Ouvrage" asp-action="Suppression" asp-route-id="@ouvrage.ID">@Localizer["Supprimer"]</a>
                    }
                }
               
         </td>
           
      </tr>
    }

 </table>

<a asp-action="Ajouter">@Localizer["Ajouter"]</a>
